/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WaitlistDrawerTestRouteImport } from './routes/waitlist-drawer-test'
import { Route as WaitlistRouteImport } from './routes/waitlist'
import { Route as FeedbackRouteImport } from './routes/feedback'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as _authenticationLayoutRouteImport } from './routes/__authenticationLayout'
import { Route as _authenticatedLayoutRouteImport } from './routes/__authenticatedLayout'
import { Route as _authenticatedLayoutIndexRouteImport } from './routes/__authenticatedLayout/index'
import { Route as _authenticationLayoutRegisterRouteImport } from './routes/__authenticationLayout/register'
import { Route as _authenticationLayoutLoginRouteImport } from './routes/__authenticationLayout/login'
import { Route as _authenticatedLayoutSettingsRouteImport } from './routes/__authenticatedLayout/settings'
import { Route as _authenticatedLayoutHomeRouteImport } from './routes/__authenticatedLayout/home'
import { Route as _authenticatedLayoutChatRouteImport } from './routes/__authenticatedLayout/chat'
import { Route as _authenticationLayoutRecoverIndexRouteImport } from './routes/__authenticationLayout/recover/index'
import { Route as _authenticationLayoutRecoverSuccessRouteImport } from './routes/__authenticationLayout/recover/success'
import { Route as _authenticationLayoutRecoverResetRouteImport } from './routes/__authenticationLayout/recover/reset'

const WaitlistDrawerTestRoute = WaitlistDrawerTestRouteImport.update({
  id: '/waitlist-drawer-test',
  path: '/waitlist-drawer-test',
  getParentRoute: () => rootRouteImport,
} as any)
const WaitlistRoute = WaitlistRouteImport.update({
  id: '/waitlist',
  path: '/waitlist',
  getParentRoute: () => rootRouteImport,
} as any)
const FeedbackRoute = FeedbackRouteImport.update({
  id: '/feedback',
  path: '/feedback',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const _authenticationLayoutRoute = _authenticationLayoutRouteImport.update({
  id: '/__authenticationLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const _authenticatedLayoutRoute = _authenticatedLayoutRouteImport.update({
  id: '/__authenticatedLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const _authenticatedLayoutIndexRoute =
  _authenticatedLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => _authenticatedLayoutRoute,
  } as any)
const _authenticationLayoutRegisterRoute =
  _authenticationLayoutRegisterRouteImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => _authenticationLayoutRoute,
  } as any)
const _authenticationLayoutLoginRoute =
  _authenticationLayoutLoginRouteImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => _authenticationLayoutRoute,
  } as any)
const _authenticatedLayoutSettingsRoute =
  _authenticatedLayoutSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => _authenticatedLayoutRoute,
  } as any)
const _authenticatedLayoutHomeRoute =
  _authenticatedLayoutHomeRouteImport.update({
    id: '/home',
    path: '/home',
    getParentRoute: () => _authenticatedLayoutRoute,
  } as any)
const _authenticatedLayoutChatRoute =
  _authenticatedLayoutChatRouteImport.update({
    id: '/chat',
    path: '/chat',
    getParentRoute: () => _authenticatedLayoutRoute,
  } as any)
const _authenticationLayoutRecoverIndexRoute =
  _authenticationLayoutRecoverIndexRouteImport.update({
    id: '/recover/',
    path: '/recover/',
    getParentRoute: () => _authenticationLayoutRoute,
  } as any)
const _authenticationLayoutRecoverSuccessRoute =
  _authenticationLayoutRecoverSuccessRouteImport.update({
    id: '/recover/success',
    path: '/recover/success',
    getParentRoute: () => _authenticationLayoutRoute,
  } as any)
const _authenticationLayoutRecoverResetRoute =
  _authenticationLayoutRecoverResetRouteImport.update({
    id: '/recover/reset',
    path: '/recover/reset',
    getParentRoute: () => _authenticationLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/contact': typeof ContactRoute
  '/feedback': typeof FeedbackRoute
  '/waitlist': typeof WaitlistRoute
  '/waitlist-drawer-test': typeof WaitlistDrawerTestRoute
  '/chat': typeof _authenticatedLayoutChatRoute
  '/home': typeof _authenticatedLayoutHomeRoute
  '/settings': typeof _authenticatedLayoutSettingsRoute
  '/login': typeof _authenticationLayoutLoginRoute
  '/register': typeof _authenticationLayoutRegisterRoute
  '/': typeof _authenticatedLayoutIndexRoute
  '/recover/reset': typeof _authenticationLayoutRecoverResetRoute
  '/recover/success': typeof _authenticationLayoutRecoverSuccessRoute
  '/recover': typeof _authenticationLayoutRecoverIndexRoute
}
export interface FileRoutesByTo {
  '/contact': typeof ContactRoute
  '/feedback': typeof FeedbackRoute
  '/waitlist': typeof WaitlistRoute
  '/waitlist-drawer-test': typeof WaitlistDrawerTestRoute
  '/chat': typeof _authenticatedLayoutChatRoute
  '/home': typeof _authenticatedLayoutHomeRoute
  '/settings': typeof _authenticatedLayoutSettingsRoute
  '/login': typeof _authenticationLayoutLoginRoute
  '/register': typeof _authenticationLayoutRegisterRoute
  '/': typeof _authenticatedLayoutIndexRoute
  '/recover/reset': typeof _authenticationLayoutRecoverResetRoute
  '/recover/success': typeof _authenticationLayoutRecoverSuccessRoute
  '/recover': typeof _authenticationLayoutRecoverIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__authenticatedLayout': typeof _authenticatedLayoutRouteWithChildren
  '/__authenticationLayout': typeof _authenticationLayoutRouteWithChildren
  '/contact': typeof ContactRoute
  '/feedback': typeof FeedbackRoute
  '/waitlist': typeof WaitlistRoute
  '/waitlist-drawer-test': typeof WaitlistDrawerTestRoute
  '/__authenticatedLayout/chat': typeof _authenticatedLayoutChatRoute
  '/__authenticatedLayout/home': typeof _authenticatedLayoutHomeRoute
  '/__authenticatedLayout/settings': typeof _authenticatedLayoutSettingsRoute
  '/__authenticationLayout/login': typeof _authenticationLayoutLoginRoute
  '/__authenticationLayout/register': typeof _authenticationLayoutRegisterRoute
  '/__authenticatedLayout/': typeof _authenticatedLayoutIndexRoute
  '/__authenticationLayout/recover/reset': typeof _authenticationLayoutRecoverResetRoute
  '/__authenticationLayout/recover/success': typeof _authenticationLayoutRecoverSuccessRoute
  '/__authenticationLayout/recover/': typeof _authenticationLayoutRecoverIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/contact'
    | '/feedback'
    | '/waitlist'
    | '/waitlist-drawer-test'
    | '/chat'
    | '/home'
    | '/settings'
    | '/login'
    | '/register'
    | '/'
    | '/recover/reset'
    | '/recover/success'
    | '/recover'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/contact'
    | '/feedback'
    | '/waitlist'
    | '/waitlist-drawer-test'
    | '/chat'
    | '/home'
    | '/settings'
    | '/login'
    | '/register'
    | '/'
    | '/recover/reset'
    | '/recover/success'
    | '/recover'
  id:
    | '__root__'
    | '/__authenticatedLayout'
    | '/__authenticationLayout'
    | '/contact'
    | '/feedback'
    | '/waitlist'
    | '/waitlist-drawer-test'
    | '/__authenticatedLayout/chat'
    | '/__authenticatedLayout/home'
    | '/__authenticatedLayout/settings'
    | '/__authenticationLayout/login'
    | '/__authenticationLayout/register'
    | '/__authenticatedLayout/'
    | '/__authenticationLayout/recover/reset'
    | '/__authenticationLayout/recover/success'
    | '/__authenticationLayout/recover/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _authenticatedLayoutRoute: typeof _authenticatedLayoutRouteWithChildren
  _authenticationLayoutRoute: typeof _authenticationLayoutRouteWithChildren
  ContactRoute: typeof ContactRoute
  FeedbackRoute: typeof FeedbackRoute
  WaitlistRoute: typeof WaitlistRoute
  WaitlistDrawerTestRoute: typeof WaitlistDrawerTestRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/waitlist-drawer-test': {
      id: '/waitlist-drawer-test'
      path: '/waitlist-drawer-test'
      fullPath: '/waitlist-drawer-test'
      preLoaderRoute: typeof WaitlistDrawerTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/waitlist': {
      id: '/waitlist'
      path: '/waitlist'
      fullPath: '/waitlist'
      preLoaderRoute: typeof WaitlistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/feedback': {
      id: '/feedback'
      path: '/feedback'
      fullPath: '/feedback'
      preLoaderRoute: typeof FeedbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authenticationLayout': {
      id: '/__authenticationLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authenticationLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authenticatedLayout': {
      id: '/__authenticatedLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authenticatedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authenticatedLayout/': {
      id: '/__authenticatedLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _authenticatedLayoutIndexRouteImport
      parentRoute: typeof _authenticatedLayoutRoute
    }
    '/__authenticationLayout/register': {
      id: '/__authenticationLayout/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof _authenticationLayoutRegisterRouteImport
      parentRoute: typeof _authenticationLayoutRoute
    }
    '/__authenticationLayout/login': {
      id: '/__authenticationLayout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof _authenticationLayoutLoginRouteImport
      parentRoute: typeof _authenticationLayoutRoute
    }
    '/__authenticatedLayout/settings': {
      id: '/__authenticatedLayout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof _authenticatedLayoutSettingsRouteImport
      parentRoute: typeof _authenticatedLayoutRoute
    }
    '/__authenticatedLayout/home': {
      id: '/__authenticatedLayout/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof _authenticatedLayoutHomeRouteImport
      parentRoute: typeof _authenticatedLayoutRoute
    }
    '/__authenticatedLayout/chat': {
      id: '/__authenticatedLayout/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof _authenticatedLayoutChatRouteImport
      parentRoute: typeof _authenticatedLayoutRoute
    }
    '/__authenticationLayout/recover/': {
      id: '/__authenticationLayout/recover/'
      path: '/recover'
      fullPath: '/recover'
      preLoaderRoute: typeof _authenticationLayoutRecoverIndexRouteImport
      parentRoute: typeof _authenticationLayoutRoute
    }
    '/__authenticationLayout/recover/success': {
      id: '/__authenticationLayout/recover/success'
      path: '/recover/success'
      fullPath: '/recover/success'
      preLoaderRoute: typeof _authenticationLayoutRecoverSuccessRouteImport
      parentRoute: typeof _authenticationLayoutRoute
    }
    '/__authenticationLayout/recover/reset': {
      id: '/__authenticationLayout/recover/reset'
      path: '/recover/reset'
      fullPath: '/recover/reset'
      preLoaderRoute: typeof _authenticationLayoutRecoverResetRouteImport
      parentRoute: typeof _authenticationLayoutRoute
    }
  }
}

interface _authenticatedLayoutRouteChildren {
  _authenticatedLayoutChatRoute: typeof _authenticatedLayoutChatRoute
  _authenticatedLayoutHomeRoute: typeof _authenticatedLayoutHomeRoute
  _authenticatedLayoutSettingsRoute: typeof _authenticatedLayoutSettingsRoute
  _authenticatedLayoutIndexRoute: typeof _authenticatedLayoutIndexRoute
}

const _authenticatedLayoutRouteChildren: _authenticatedLayoutRouteChildren = {
  _authenticatedLayoutChatRoute: _authenticatedLayoutChatRoute,
  _authenticatedLayoutHomeRoute: _authenticatedLayoutHomeRoute,
  _authenticatedLayoutSettingsRoute: _authenticatedLayoutSettingsRoute,
  _authenticatedLayoutIndexRoute: _authenticatedLayoutIndexRoute,
}

const _authenticatedLayoutRouteWithChildren =
  _authenticatedLayoutRoute._addFileChildren(_authenticatedLayoutRouteChildren)

interface _authenticationLayoutRouteChildren {
  _authenticationLayoutLoginRoute: typeof _authenticationLayoutLoginRoute
  _authenticationLayoutRegisterRoute: typeof _authenticationLayoutRegisterRoute
  _authenticationLayoutRecoverResetRoute: typeof _authenticationLayoutRecoverResetRoute
  _authenticationLayoutRecoverSuccessRoute: typeof _authenticationLayoutRecoverSuccessRoute
  _authenticationLayoutRecoverIndexRoute: typeof _authenticationLayoutRecoverIndexRoute
}

const _authenticationLayoutRouteChildren: _authenticationLayoutRouteChildren = {
  _authenticationLayoutLoginRoute: _authenticationLayoutLoginRoute,
  _authenticationLayoutRegisterRoute: _authenticationLayoutRegisterRoute,
  _authenticationLayoutRecoverResetRoute:
    _authenticationLayoutRecoverResetRoute,
  _authenticationLayoutRecoverSuccessRoute:
    _authenticationLayoutRecoverSuccessRoute,
  _authenticationLayoutRecoverIndexRoute:
    _authenticationLayoutRecoverIndexRoute,
}

const _authenticationLayoutRouteWithChildren =
  _authenticationLayoutRoute._addFileChildren(
    _authenticationLayoutRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  _authenticatedLayoutRoute: _authenticatedLayoutRouteWithChildren,
  _authenticationLayoutRoute: _authenticationLayoutRouteWithChildren,
  ContactRoute: ContactRoute,
  FeedbackRoute: FeedbackRoute,
  WaitlistRoute: WaitlistRoute,
  WaitlistDrawerTestRoute: WaitlistDrawerTestRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
