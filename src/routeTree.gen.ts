/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as _authenticatedLayoutRouteImport } from './routes/__authenticatedLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as _authenticatedLayoutHomeRouteImport } from './routes/__authenticatedLayout/home'
import { Route as _authenticatedLayoutChatRouteImport } from './routes/__authenticatedLayout/chat'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const _authenticatedLayoutRoute = _authenticatedLayoutRouteImport.update({
  id: '/__authenticatedLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const _authenticatedLayoutHomeRoute =
  _authenticatedLayoutHomeRouteImport.update({
    id: '/home',
    path: '/home',
    getParentRoute: () => _authenticatedLayoutRoute,
  } as any)
const _authenticatedLayoutChatRoute =
  _authenticatedLayoutChatRouteImport.update({
    id: '/chat',
    path: '/chat',
    getParentRoute: () => _authenticatedLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/chat': typeof _authenticatedLayoutChatRoute
  '/home': typeof _authenticatedLayoutHomeRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/chat': typeof _authenticatedLayoutChatRoute
  '/home': typeof _authenticatedLayoutHomeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/__authenticatedLayout': typeof _authenticatedLayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/__authenticatedLayout/chat': typeof _authenticatedLayoutChatRoute
  '/__authenticatedLayout/home': typeof _authenticatedLayoutHomeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/chat' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/chat' | '/home'
  id:
    | '__root__'
    | '/'
    | '/__authenticatedLayout'
    | '/login'
    | '/__authenticatedLayout/chat'
    | '/__authenticatedLayout/home'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  _authenticatedLayoutRoute: typeof _authenticatedLayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authenticatedLayout': {
      id: '/__authenticatedLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authenticatedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authenticatedLayout/home': {
      id: '/__authenticatedLayout/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof _authenticatedLayoutHomeRouteImport
      parentRoute: typeof _authenticatedLayoutRoute
    }
    '/__authenticatedLayout/chat': {
      id: '/__authenticatedLayout/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof _authenticatedLayoutChatRouteImport
      parentRoute: typeof _authenticatedLayoutRoute
    }
  }
}

interface _authenticatedLayoutRouteChildren {
  _authenticatedLayoutChatRoute: typeof _authenticatedLayoutChatRoute
  _authenticatedLayoutHomeRoute: typeof _authenticatedLayoutHomeRoute
}

const _authenticatedLayoutRouteChildren: _authenticatedLayoutRouteChildren = {
  _authenticatedLayoutChatRoute: _authenticatedLayoutChatRoute,
  _authenticatedLayoutHomeRoute: _authenticatedLayoutHomeRoute,
}

const _authenticatedLayoutRouteWithChildren =
  _authenticatedLayoutRoute._addFileChildren(_authenticatedLayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  _authenticatedLayoutRoute: _authenticatedLayoutRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
